% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_HDoutliers.R
\name{find_HDoutliers}
\alias{find_HDoutliers}
\title{Detect Anomalies in High Dimensional Data.}
\usage{
find_HDoutliers(data, maxrows = 10000, radius = NULL, alpha = 0.05,
  l = 0.2)
}
\arguments{
\item{data}{A vector, matrix, or data frame consisting of numeric and/or categorical variables.}

\item{maxrows}{If the number of observations is greater than \code{maxrows}, \code{outliers} reduces the
number used in k-nearest-neighbor computations to a set of \emph{exemplars}. The default value is 10000.}

\item{radius}{Threshold for determining membership in the \emph{exemplars}'s lists (used only when the
number of observations is greater than \eqn{maxrows}). An observation is added to an \emph{exemplars}'s lists
if its distance to that \emph{exemplar} is less than \code{radius}. The default value is \eqn{.1/(log n)^(1/p)},
 where \eqn{n} is the number of observations and \eqn{p} is the dimension of the data.}

\item{alpha}{Threshold for determining the cutoff for outliers. Observations are considered
outliers outliers if they fall in the \eqn{(1- alpha)} tail of the distribution of the nearest-neighbor
distances between exemplars.}

\item{l}{A user defined parameter to obtain a trade off between the false positives and the false negatives.}
}
\value{
The indexes of the observations determined to be outliers.
}
\description{
Detect anomalies in high dimensional data. This is a modification of
\code{\link[HDoutliers]{HDoutliers}}.
}
\details{
If the number of observations exceeds \code{maxrows}, the data is first partitioned into lists
associated with \emph{exemplars} and their \emph{members} within \code{radius} of each \emph{exemplar}, to
reduce the number of k-nearest neighbor computations required for outlier detection.
}
\examples{
\dontrun{
require(ggplot2)
set.seed(1234)
data <- c(rnorm(1000, mean = -6), 0, rnorm(1000, mean = 6))
df <- tibble::tibble(index = rep(0, length(data)), data = data)
data_out <- find_HDoutliers(data)
data_plot <- ggplot(df, aes(x = data, y = index)) +
geom_point() + xlab("x") + ylab("") +  ggtitle("Original Data")
output_plot <- data_plot +
geom_point(data = df[data_out, ], aes(x = data, y = index),
colour = "red", size = 3) + ggtitle("Output")
gridExtra::grid.arrange(data_plot, output_plot)
}

n <- 1000 # number of observations
set.seed(3)
x <- matrix(rnorm(2*n),n,2)
nout <- 8 # number of outliers
out.vals <- 10*runif(2*nout,min=-1,max=1)
out.positions <- sample(1:n,size=nout)
x[out.positions,] <- out.vals
plot(x, pch=20, main="Original Data", col="blue")
out.W <- find_HDoutliers(x)
x[out.W,]
plot(x[-out.W,], pch=20, col="blue", main="Modified Algorithm", xlim=c(min(x[,1]), max(x[,1])),
     ylim=c(min(x[,2]), max(x[,2])), xlab="x", ylab="y" )
points( x[out.W,1], x[out.W,2],  col="darkgreen", pch=15)
}
\references{
{Wilkinson, L. (2016). Visualizing outliers.}
}
\seealso{
\code{\link[HDoutliers]{getHDmembers}},  \code{\link{get_outliers}}
}
